
<h1 class=" text-center">Actions</h1>


<h2>Filter By Categories:</h2>
<%= form_tag(actions_path, method: :get, data: { controller: "hello" }, class: "category_form") do %>
  <div class="d-flex">
    <% @all_user_categories.each do |category| %>
      <% color = category.id % Category::COLORS.length %>
      <div class="custom-checkbox" style="--category_checkbox:<%= Category::COLORS[color] %>;">
        <%= label_tag "category_#{category.id}", category.title, class: "category_checkbox categories" %>
        <%= check_box_tag 'categories[]', category.id, @selected_category_ids.include?(category.id) %>
      </div>
    <% end %>
  </div>
  <%= submit_tag 'Filtrer' %>
<% end %>

  <!-- Content you want to update -->
  <%= render "categories" %>


<%#
<script>

  document.addEventListener("DOMContentLoaded", function() {
    const checkboxes = document.querySelectorAll('.category_checkbox');

    checkboxes.forEach(checkbox => {
      const box = checkbox.nextElementSibling;

      if (box) { // Vérifier si la checkbox existe avant d'ajouter les écouteurs
        function updateCheckboxColor() {
          if (box.checked) {
            checkbox.style.backgroundColor = "var(--category_checkbox)";
          } else {
            checkbox.style.backgroundColor = "initial";
          }
        }
  console.log(box);
        box.addEventListener('click', (event) => {
          updateCheckboxColor();
          event.currenTarget.checked = !event.currentTarget.checked;
          console.log(event.currentTarget);
        });

        updateCheckboxColor();
      }
    });

    const filterButton = document.querySelector('.category_form input[type="submit"]');

    if (filterButton) { // Vérifier si le bouton existe avant d'ajouter l'écouteur
      filterButton.addEventListener('click', function() {
        // Logique pour la soumission du formulaire ou AJAX si nécessaire
      });
    }
  });
</script> %>
